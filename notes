#!/bin/bash
#Use yargs to pass arguments via commandline (if needed)
#Next steps include bulk import and creating react frontend
#User Input
#Creating a Menu
#Creating an API to access it
#Creating Front End to Display it
#Need to add Album (.album) property
#Need to add Quotes (.quotes) property

dir=/home/ubuntu/projects/music/music-app

#Bash Aliases
alias importMusic="node $dir/App.js bulkImport"
alias syncMusic="$dir/jsontocsv > $dir/MUSIC.CSV && php $dir/update-musicsheet.php"
alias viewMusic="node $dir/App.js read"

#Bash Functions
searchMusic() { echo -e "\n*******SEARCH RESULTS*******\n"; cat $dir/MUSIC.JSON | jq  --arg v "${@:2}" '.songs[] | select(.'$1' | match($v;"i"))' | sed '/"album": ""/d' | sed '/"genre": ""/d' | sed '/"BPM": ""/d' | sed '/"speed": ""/d' | sed '/"mood": ""/d' | sed '/"tags": ""/d' | sed '/"quotes": ""/d' | tr -d \" | tr -d { | sed "s/artist://g" | sed "s/song://g" | sed "s/album://g" | sed "s/genre://g" | sed "s/BPM://g" | sed "s/speed://g" | sed "s/mood://g" | sed "s/tags://g" | sed "s/quotes://g" | tr -d "," | sed 's/\\//g' | sed "s/;/,/g" | awk NF | tr -d } ; echo "#djAlgoriddim.V"; }
searchSongs() { node $dir/App.js filter --all "`echo $@`"; }

#Steps to Sync App with Database (Google Sheets)
#when adding from the command line
#download from google sheets as CSV
#bulkImportSongs()
#addMusic() 
#writeMusic() this saves local copy
#syncMusic() this uploads json to google sheets, this will require google sheets api integration
